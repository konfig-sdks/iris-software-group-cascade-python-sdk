# coding: utf-8

"""
    HR API

    <a href='swaggerv2.json'>Download Swagger Json in OAS2 Format.</a>

    The version of the OpenAPI document: 2
    Contact: hrapi@iris.co.uk
    Created by: https://help.iris.co.uk/hr/cascade/api/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from iris_software_group_cascade_python_sdk import schemas  # noqa: F401


class EntitlementModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    An Employee's Attendance Entitlement.
    """


    class MetaOapg:
        
        class properties:
            
            
            class EmployeeId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'EmployeeId':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class AbsenceReasonId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'AbsenceReasonId':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class EntitlementYearName(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'EntitlementYearName':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            Open = schemas.BoolSchema
            StartDate = schemas.DateTimeSchema
            EndDate = schemas.DateTimeSchema
            
            
            class Narrative(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'Narrative':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            BaseDays = schemas.Float64Schema
            
            
            class BaseMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'BaseMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            CarryDays = schemas.Float64Schema
            
            
            class CarryMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'CarryMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class CarryUseByDate(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'CarryUseByDate':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class CarryLostDays(
                schemas.Float64Base,
                schemas.NumberBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'double'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, float, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'CarryLostDays':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class CarryLostMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'CarryLostMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            ManualAdjustmentDays = schemas.Float64Schema
            
            
            class ManualAdjustmentMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'ManualAdjustmentMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            ServiceLengthAdjustmentDays = schemas.Float64Schema
            
            
            class ServiceLengthAdjustmentMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'ServiceLengthAdjustmentMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            NewStarterAdjustmentDays = schemas.Float64Schema
            
            
            class NewStarterAdjustmentMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'NewStarterAdjustmentMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            LeaverAdjusmentDays = schemas.Float64Schema
            
            
            class LeaverAdjusmentMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'LeaverAdjusmentMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class LeaverAdjustmentDays(
                schemas.Float64Base,
                schemas.NumberBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'double'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, float, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'LeaverAdjustmentDays':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class LeaverAdjustmentMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'LeaverAdjustmentMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            PartTimeAdjustmentDays = schemas.Float64Schema
            
            
            class PartTimeAdjustmentMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'PartTimeAdjustmentMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            BankHolidayAdjustmentDays = schemas.Float64Schema
            
            
            class BankHolidayAdjustmentMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'BankHolidayAdjustmentMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            BuySellDays = schemas.Float64Schema
            
            
            class BuySellMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'BuySellMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class TotalEntitlementDays(
                schemas.Float64Base,
                schemas.NumberBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'double'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, float, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'TotalEntitlementDays':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class TotalEntitlementMinutes(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'TotalEntitlementMinutes':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class SourceSystemId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'SourceSystemId':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class SourceSystemCreatedOn(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'SourceSystemCreatedOn':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class SourceSystemLastModifiedOn(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'SourceSystemLastModifiedOn':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class Id(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'Id':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            CreatedOn = schemas.DateTimeSchema
            
            
            class CreatedBy(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'CreatedBy':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class LastModifiedOn(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'LastModifiedOn':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class LastModifiedBy(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'LastModifiedBy':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            __annotations__ = {
                "EmployeeId": EmployeeId,
                "AbsenceReasonId": AbsenceReasonId,
                "EntitlementYearName": EntitlementYearName,
                "Open": Open,
                "StartDate": StartDate,
                "EndDate": EndDate,
                "Narrative": Narrative,
                "BaseDays": BaseDays,
                "BaseMinutes": BaseMinutes,
                "CarryDays": CarryDays,
                "CarryMinutes": CarryMinutes,
                "CarryUseByDate": CarryUseByDate,
                "CarryLostDays": CarryLostDays,
                "CarryLostMinutes": CarryLostMinutes,
                "ManualAdjustmentDays": ManualAdjustmentDays,
                "ManualAdjustmentMinutes": ManualAdjustmentMinutes,
                "ServiceLengthAdjustmentDays": ServiceLengthAdjustmentDays,
                "ServiceLengthAdjustmentMinutes": ServiceLengthAdjustmentMinutes,
                "NewStarterAdjustmentDays": NewStarterAdjustmentDays,
                "NewStarterAdjustmentMinutes": NewStarterAdjustmentMinutes,
                "LeaverAdjusmentDays": LeaverAdjusmentDays,
                "LeaverAdjusmentMinutes": LeaverAdjusmentMinutes,
                "LeaverAdjustmentDays": LeaverAdjustmentDays,
                "LeaverAdjustmentMinutes": LeaverAdjustmentMinutes,
                "PartTimeAdjustmentDays": PartTimeAdjustmentDays,
                "PartTimeAdjustmentMinutes": PartTimeAdjustmentMinutes,
                "BankHolidayAdjustmentDays": BankHolidayAdjustmentDays,
                "BankHolidayAdjustmentMinutes": BankHolidayAdjustmentMinutes,
                "BuySellDays": BuySellDays,
                "BuySellMinutes": BuySellMinutes,
                "TotalEntitlementDays": TotalEntitlementDays,
                "TotalEntitlementMinutes": TotalEntitlementMinutes,
                "SourceSystemId": SourceSystemId,
                "SourceSystemCreatedOn": SourceSystemCreatedOn,
                "SourceSystemLastModifiedOn": SourceSystemLastModifiedOn,
                "Id": Id,
                "CreatedOn": CreatedOn,
                "CreatedBy": CreatedBy,
                "LastModifiedOn": LastModifiedOn,
                "LastModifiedBy": LastModifiedBy,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["EmployeeId"]) -> MetaOapg.properties.EmployeeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AbsenceReasonId"]) -> MetaOapg.properties.AbsenceReasonId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["EntitlementYearName"]) -> MetaOapg.properties.EntitlementYearName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Open"]) -> MetaOapg.properties.Open: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["StartDate"]) -> MetaOapg.properties.StartDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["EndDate"]) -> MetaOapg.properties.EndDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Narrative"]) -> MetaOapg.properties.Narrative: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BaseDays"]) -> MetaOapg.properties.BaseDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BaseMinutes"]) -> MetaOapg.properties.BaseMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CarryDays"]) -> MetaOapg.properties.CarryDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CarryMinutes"]) -> MetaOapg.properties.CarryMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CarryUseByDate"]) -> MetaOapg.properties.CarryUseByDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CarryLostDays"]) -> MetaOapg.properties.CarryLostDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CarryLostMinutes"]) -> MetaOapg.properties.CarryLostMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ManualAdjustmentDays"]) -> MetaOapg.properties.ManualAdjustmentDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ManualAdjustmentMinutes"]) -> MetaOapg.properties.ManualAdjustmentMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ServiceLengthAdjustmentDays"]) -> MetaOapg.properties.ServiceLengthAdjustmentDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ServiceLengthAdjustmentMinutes"]) -> MetaOapg.properties.ServiceLengthAdjustmentMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["NewStarterAdjustmentDays"]) -> MetaOapg.properties.NewStarterAdjustmentDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["NewStarterAdjustmentMinutes"]) -> MetaOapg.properties.NewStarterAdjustmentMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LeaverAdjusmentDays"]) -> MetaOapg.properties.LeaverAdjusmentDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LeaverAdjusmentMinutes"]) -> MetaOapg.properties.LeaverAdjusmentMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LeaverAdjustmentDays"]) -> MetaOapg.properties.LeaverAdjustmentDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LeaverAdjustmentMinutes"]) -> MetaOapg.properties.LeaverAdjustmentMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PartTimeAdjustmentDays"]) -> MetaOapg.properties.PartTimeAdjustmentDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PartTimeAdjustmentMinutes"]) -> MetaOapg.properties.PartTimeAdjustmentMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BankHolidayAdjustmentDays"]) -> MetaOapg.properties.BankHolidayAdjustmentDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BankHolidayAdjustmentMinutes"]) -> MetaOapg.properties.BankHolidayAdjustmentMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BuySellDays"]) -> MetaOapg.properties.BuySellDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BuySellMinutes"]) -> MetaOapg.properties.BuySellMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TotalEntitlementDays"]) -> MetaOapg.properties.TotalEntitlementDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TotalEntitlementMinutes"]) -> MetaOapg.properties.TotalEntitlementMinutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SourceSystemId"]) -> MetaOapg.properties.SourceSystemId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SourceSystemCreatedOn"]) -> MetaOapg.properties.SourceSystemCreatedOn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SourceSystemLastModifiedOn"]) -> MetaOapg.properties.SourceSystemLastModifiedOn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Id"]) -> MetaOapg.properties.Id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CreatedOn"]) -> MetaOapg.properties.CreatedOn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CreatedBy"]) -> MetaOapg.properties.CreatedBy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LastModifiedOn"]) -> MetaOapg.properties.LastModifiedOn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LastModifiedBy"]) -> MetaOapg.properties.LastModifiedBy: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["EmployeeId", "AbsenceReasonId", "EntitlementYearName", "Open", "StartDate", "EndDate", "Narrative", "BaseDays", "BaseMinutes", "CarryDays", "CarryMinutes", "CarryUseByDate", "CarryLostDays", "CarryLostMinutes", "ManualAdjustmentDays", "ManualAdjustmentMinutes", "ServiceLengthAdjustmentDays", "ServiceLengthAdjustmentMinutes", "NewStarterAdjustmentDays", "NewStarterAdjustmentMinutes", "LeaverAdjusmentDays", "LeaverAdjusmentMinutes", "LeaverAdjustmentDays", "LeaverAdjustmentMinutes", "PartTimeAdjustmentDays", "PartTimeAdjustmentMinutes", "BankHolidayAdjustmentDays", "BankHolidayAdjustmentMinutes", "BuySellDays", "BuySellMinutes", "TotalEntitlementDays", "TotalEntitlementMinutes", "SourceSystemId", "SourceSystemCreatedOn", "SourceSystemLastModifiedOn", "Id", "CreatedOn", "CreatedBy", "LastModifiedOn", "LastModifiedBy", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["EmployeeId"]) -> typing.Union[MetaOapg.properties.EmployeeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AbsenceReasonId"]) -> typing.Union[MetaOapg.properties.AbsenceReasonId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["EntitlementYearName"]) -> typing.Union[MetaOapg.properties.EntitlementYearName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Open"]) -> typing.Union[MetaOapg.properties.Open, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["StartDate"]) -> typing.Union[MetaOapg.properties.StartDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["EndDate"]) -> typing.Union[MetaOapg.properties.EndDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Narrative"]) -> typing.Union[MetaOapg.properties.Narrative, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BaseDays"]) -> typing.Union[MetaOapg.properties.BaseDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BaseMinutes"]) -> typing.Union[MetaOapg.properties.BaseMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CarryDays"]) -> typing.Union[MetaOapg.properties.CarryDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CarryMinutes"]) -> typing.Union[MetaOapg.properties.CarryMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CarryUseByDate"]) -> typing.Union[MetaOapg.properties.CarryUseByDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CarryLostDays"]) -> typing.Union[MetaOapg.properties.CarryLostDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CarryLostMinutes"]) -> typing.Union[MetaOapg.properties.CarryLostMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ManualAdjustmentDays"]) -> typing.Union[MetaOapg.properties.ManualAdjustmentDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ManualAdjustmentMinutes"]) -> typing.Union[MetaOapg.properties.ManualAdjustmentMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ServiceLengthAdjustmentDays"]) -> typing.Union[MetaOapg.properties.ServiceLengthAdjustmentDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ServiceLengthAdjustmentMinutes"]) -> typing.Union[MetaOapg.properties.ServiceLengthAdjustmentMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["NewStarterAdjustmentDays"]) -> typing.Union[MetaOapg.properties.NewStarterAdjustmentDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["NewStarterAdjustmentMinutes"]) -> typing.Union[MetaOapg.properties.NewStarterAdjustmentMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LeaverAdjusmentDays"]) -> typing.Union[MetaOapg.properties.LeaverAdjusmentDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LeaverAdjusmentMinutes"]) -> typing.Union[MetaOapg.properties.LeaverAdjusmentMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LeaverAdjustmentDays"]) -> typing.Union[MetaOapg.properties.LeaverAdjustmentDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LeaverAdjustmentMinutes"]) -> typing.Union[MetaOapg.properties.LeaverAdjustmentMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PartTimeAdjustmentDays"]) -> typing.Union[MetaOapg.properties.PartTimeAdjustmentDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PartTimeAdjustmentMinutes"]) -> typing.Union[MetaOapg.properties.PartTimeAdjustmentMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BankHolidayAdjustmentDays"]) -> typing.Union[MetaOapg.properties.BankHolidayAdjustmentDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BankHolidayAdjustmentMinutes"]) -> typing.Union[MetaOapg.properties.BankHolidayAdjustmentMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BuySellDays"]) -> typing.Union[MetaOapg.properties.BuySellDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BuySellMinutes"]) -> typing.Union[MetaOapg.properties.BuySellMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TotalEntitlementDays"]) -> typing.Union[MetaOapg.properties.TotalEntitlementDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TotalEntitlementMinutes"]) -> typing.Union[MetaOapg.properties.TotalEntitlementMinutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SourceSystemId"]) -> typing.Union[MetaOapg.properties.SourceSystemId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SourceSystemCreatedOn"]) -> typing.Union[MetaOapg.properties.SourceSystemCreatedOn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SourceSystemLastModifiedOn"]) -> typing.Union[MetaOapg.properties.SourceSystemLastModifiedOn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Id"]) -> typing.Union[MetaOapg.properties.Id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CreatedOn"]) -> typing.Union[MetaOapg.properties.CreatedOn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CreatedBy"]) -> typing.Union[MetaOapg.properties.CreatedBy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LastModifiedOn"]) -> typing.Union[MetaOapg.properties.LastModifiedOn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LastModifiedBy"]) -> typing.Union[MetaOapg.properties.LastModifiedBy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["EmployeeId", "AbsenceReasonId", "EntitlementYearName", "Open", "StartDate", "EndDate", "Narrative", "BaseDays", "BaseMinutes", "CarryDays", "CarryMinutes", "CarryUseByDate", "CarryLostDays", "CarryLostMinutes", "ManualAdjustmentDays", "ManualAdjustmentMinutes", "ServiceLengthAdjustmentDays", "ServiceLengthAdjustmentMinutes", "NewStarterAdjustmentDays", "NewStarterAdjustmentMinutes", "LeaverAdjusmentDays", "LeaverAdjusmentMinutes", "LeaverAdjustmentDays", "LeaverAdjustmentMinutes", "PartTimeAdjustmentDays", "PartTimeAdjustmentMinutes", "BankHolidayAdjustmentDays", "BankHolidayAdjustmentMinutes", "BuySellDays", "BuySellMinutes", "TotalEntitlementDays", "TotalEntitlementMinutes", "SourceSystemId", "SourceSystemCreatedOn", "SourceSystemLastModifiedOn", "Id", "CreatedOn", "CreatedBy", "LastModifiedOn", "LastModifiedBy", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        EmployeeId: typing.Union[MetaOapg.properties.EmployeeId, None, str, schemas.Unset] = schemas.unset,
        AbsenceReasonId: typing.Union[MetaOapg.properties.AbsenceReasonId, None, str, schemas.Unset] = schemas.unset,
        EntitlementYearName: typing.Union[MetaOapg.properties.EntitlementYearName, None, str, schemas.Unset] = schemas.unset,
        Open: typing.Union[MetaOapg.properties.Open, bool, schemas.Unset] = schemas.unset,
        StartDate: typing.Union[MetaOapg.properties.StartDate, str, datetime, schemas.Unset] = schemas.unset,
        EndDate: typing.Union[MetaOapg.properties.EndDate, str, datetime, schemas.Unset] = schemas.unset,
        Narrative: typing.Union[MetaOapg.properties.Narrative, None, str, schemas.Unset] = schemas.unset,
        BaseDays: typing.Union[MetaOapg.properties.BaseDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        BaseMinutes: typing.Union[MetaOapg.properties.BaseMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        CarryDays: typing.Union[MetaOapg.properties.CarryDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        CarryMinutes: typing.Union[MetaOapg.properties.CarryMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        CarryUseByDate: typing.Union[MetaOapg.properties.CarryUseByDate, None, str, datetime, schemas.Unset] = schemas.unset,
        CarryLostDays: typing.Union[MetaOapg.properties.CarryLostDays, None, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        CarryLostMinutes: typing.Union[MetaOapg.properties.CarryLostMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ManualAdjustmentDays: typing.Union[MetaOapg.properties.ManualAdjustmentDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ManualAdjustmentMinutes: typing.Union[MetaOapg.properties.ManualAdjustmentMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ServiceLengthAdjustmentDays: typing.Union[MetaOapg.properties.ServiceLengthAdjustmentDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ServiceLengthAdjustmentMinutes: typing.Union[MetaOapg.properties.ServiceLengthAdjustmentMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        NewStarterAdjustmentDays: typing.Union[MetaOapg.properties.NewStarterAdjustmentDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        NewStarterAdjustmentMinutes: typing.Union[MetaOapg.properties.NewStarterAdjustmentMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        LeaverAdjusmentDays: typing.Union[MetaOapg.properties.LeaverAdjusmentDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        LeaverAdjusmentMinutes: typing.Union[MetaOapg.properties.LeaverAdjusmentMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        LeaverAdjustmentDays: typing.Union[MetaOapg.properties.LeaverAdjustmentDays, None, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        LeaverAdjustmentMinutes: typing.Union[MetaOapg.properties.LeaverAdjustmentMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        PartTimeAdjustmentDays: typing.Union[MetaOapg.properties.PartTimeAdjustmentDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        PartTimeAdjustmentMinutes: typing.Union[MetaOapg.properties.PartTimeAdjustmentMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        BankHolidayAdjustmentDays: typing.Union[MetaOapg.properties.BankHolidayAdjustmentDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        BankHolidayAdjustmentMinutes: typing.Union[MetaOapg.properties.BankHolidayAdjustmentMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        BuySellDays: typing.Union[MetaOapg.properties.BuySellDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        BuySellMinutes: typing.Union[MetaOapg.properties.BuySellMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        TotalEntitlementDays: typing.Union[MetaOapg.properties.TotalEntitlementDays, None, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        TotalEntitlementMinutes: typing.Union[MetaOapg.properties.TotalEntitlementMinutes, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        SourceSystemId: typing.Union[MetaOapg.properties.SourceSystemId, None, str, schemas.Unset] = schemas.unset,
        SourceSystemCreatedOn: typing.Union[MetaOapg.properties.SourceSystemCreatedOn, None, str, datetime, schemas.Unset] = schemas.unset,
        SourceSystemLastModifiedOn: typing.Union[MetaOapg.properties.SourceSystemLastModifiedOn, None, str, datetime, schemas.Unset] = schemas.unset,
        Id: typing.Union[MetaOapg.properties.Id, None, str, schemas.Unset] = schemas.unset,
        CreatedOn: typing.Union[MetaOapg.properties.CreatedOn, str, datetime, schemas.Unset] = schemas.unset,
        CreatedBy: typing.Union[MetaOapg.properties.CreatedBy, None, str, schemas.Unset] = schemas.unset,
        LastModifiedOn: typing.Union[MetaOapg.properties.LastModifiedOn, None, str, datetime, schemas.Unset] = schemas.unset,
        LastModifiedBy: typing.Union[MetaOapg.properties.LastModifiedBy, None, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EntitlementModel':
        return super().__new__(
            cls,
            *args,
            EmployeeId=EmployeeId,
            AbsenceReasonId=AbsenceReasonId,
            EntitlementYearName=EntitlementYearName,
            Open=Open,
            StartDate=StartDate,
            EndDate=EndDate,
            Narrative=Narrative,
            BaseDays=BaseDays,
            BaseMinutes=BaseMinutes,
            CarryDays=CarryDays,
            CarryMinutes=CarryMinutes,
            CarryUseByDate=CarryUseByDate,
            CarryLostDays=CarryLostDays,
            CarryLostMinutes=CarryLostMinutes,
            ManualAdjustmentDays=ManualAdjustmentDays,
            ManualAdjustmentMinutes=ManualAdjustmentMinutes,
            ServiceLengthAdjustmentDays=ServiceLengthAdjustmentDays,
            ServiceLengthAdjustmentMinutes=ServiceLengthAdjustmentMinutes,
            NewStarterAdjustmentDays=NewStarterAdjustmentDays,
            NewStarterAdjustmentMinutes=NewStarterAdjustmentMinutes,
            LeaverAdjusmentDays=LeaverAdjusmentDays,
            LeaverAdjusmentMinutes=LeaverAdjusmentMinutes,
            LeaverAdjustmentDays=LeaverAdjustmentDays,
            LeaverAdjustmentMinutes=LeaverAdjustmentMinutes,
            PartTimeAdjustmentDays=PartTimeAdjustmentDays,
            PartTimeAdjustmentMinutes=PartTimeAdjustmentMinutes,
            BankHolidayAdjustmentDays=BankHolidayAdjustmentDays,
            BankHolidayAdjustmentMinutes=BankHolidayAdjustmentMinutes,
            BuySellDays=BuySellDays,
            BuySellMinutes=BuySellMinutes,
            TotalEntitlementDays=TotalEntitlementDays,
            TotalEntitlementMinutes=TotalEntitlementMinutes,
            SourceSystemId=SourceSystemId,
            SourceSystemCreatedOn=SourceSystemCreatedOn,
            SourceSystemLastModifiedOn=SourceSystemLastModifiedOn,
            Id=Id,
            CreatedOn=CreatedOn,
            CreatedBy=CreatedBy,
            LastModifiedOn=LastModifiedOn,
            LastModifiedBy=LastModifiedBy,
            _configuration=_configuration,
            **kwargs,
        )
